#!/bin/bash
# Compiz Fusion Icon Wrapper Script

frontend="" # Set to gtk, qt3 (currently not installed by default), or qt4 to override autodetection
datadir=$(dirname $0)/../share/fusion-icon

reset() {
	if [[ -n $XDG_CONFIG_HOME ]]; then
		rm $XDG_CONFIG_HOME/fusion-icon && exit 0 || exit 1
	else
		rm ~/.config/fusion-icon && exit 0 || exit 1
	fi
}

help() {
	echo "Usage: $(basename $0) [options] [frontend]"
	echo
	echo "  --help     Display this text"
	echo "  --reset    Remove fusion-icon configuration file"
	echo
	echo "Frontends:"
	echo "  --gtk      Use the pygtk 2.10 frontend"
	echo "  --qt3      Use the PyQt3 frontend (currently not installed by default)"
	echo "  --qt4      Use the PyQt4 frontend"
	exit 0
}

exists() {
	[[ -f $datadir/fusion-icon-$1.py ]] && return 0 || return 1
}

imports() {
	python -c "import $*" && return 0 || return 1
}

gnome_session() {
	pgrep gnome-session 2>&1>/dev/null && return 0 || return 1
}

kde_session() {
	pgrep dcop 2>&1>/dev/null && return 0 || return 1
}

run_fusion_icon() {
	if exists $frontend; then
		$datadir/fusion-icon-$frontend.py
	else
		echo "error: specified frontend \"$frontend\" not installed"
		exit 1
	fi
}

for arg in "$@"; do
	case "$arg" in
	"-h" | "--help" )	help ;;
	"--reset"       )	reset ;;
	"--gtk" | "gtk" )	frontend="gtk"; break ;;
	"--qt3" | "qt3" )	frontend="qt3"; break ;;
	"--qt4" | "qt4" )	frontend="qt4"; break ;;
	*               )	echo "error: \"$arg\" is an invalid argument."
						exit 1 ;;
	esac
done

# Try to pick the frontend that will best match the environment (and has the needed python bindings)
if [[ -z $frontend ]]; then
	if gnome_session && exists gtk && imports pygtk; then
		echo "* Using GTK frontend (gnome detected)"
		frontend=gtk
	elif kde_session; then
		if exists qt4 && imports PyQt4; then
			echo "* Using Qt4 frontend (kde detected)"
			frontend=qt4
		elif exists qt3 && imports qt3 ctypes; then
			echo "* Using Qt3 frontend (kde detected)"
			frontend=qt3
		fi
	elif exists gtk && imports pygtk; then
		echo "* Using GTK frontend"
		frontend=gtk
	elif exists qt4 && imports PyQt4; then
		echo "* Using Qt4 frontend"
		frontend=qt4
	elif exists qt3 && imports qt ctypes; then
		echo "* Using Qt3 frontend"
		frontend=qt3
	else
		echo "error: no frontends installed"
		exit 1
	fi
fi

run_fusion_icon

